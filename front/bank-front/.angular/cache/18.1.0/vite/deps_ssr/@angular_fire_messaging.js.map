{
  "version": 3,
  "sources": ["../../../../../node_modules/@angular/fire/fesm2022/angular-fire-messaging.mjs", "../../../../../node_modules/@firebase/installations/dist/esm/index.esm2017.js", "../../../../../node_modules/@firebase/messaging/dist/esm/index.esm2017.js"],
  "sourcesContent": ["import { ɵgetAllInstancesOf as _getAllInstancesOf, ɵisSupportedError as _isSupportedError, ɵgetDefaultInstanceOf as _getDefaultInstanceOf, VERSION, ɵAngularFireSchedulers as _AngularFireSchedulers, ɵzoneWrap as _zoneWrap } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, APP_INITIALIZER, NgModule, makeEnvironmentProviders, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { isSupported as isSupported$1, deleteToken as deleteToken$1, getMessaging as getMessaging$1, getToken as getToken$1, onMessage as onMessage$1 } from 'firebase/messaging';\nexport * from 'firebase/messaging';\nclass Messaging {\n  constructor(messaging) {\n    return messaging;\n  }\n}\nconst MESSAGING_PROVIDER_NAME = 'messaging';\nclass MessagingInstances {\n  constructor() {\n    return _getAllInstancesOf(MESSAGING_PROVIDER_NAME);\n  }\n}\nconst messagingInstance$ = timer(0, 300).pipe(concatMap(() => from(_getAllInstancesOf(MESSAGING_PROVIDER_NAME))), distinct());\nconst isMessagingSupportedPromiseSymbol = '__angularfire_symbol__messagingIsSupported';\nconst isMessagingSupportedValueSymbol = '__angularfire_symbol__messagingIsSupportedValue';\nglobalThis[isMessagingSupportedPromiseSymbol] ||= isSupported$1().then(it => globalThis[isMessagingSupportedValueSymbol] = it).catch(() => globalThis[isMessagingSupportedValueSymbol] = false);\nconst isMessagingSupportedFactory = {\n  async: () => globalThis[isMessagingSupportedPromiseSymbol],\n  sync: () => {\n    const ret = globalThis[isMessagingSupportedValueSymbol];\n    if (ret === undefined) {\n      throw new Error(_isSupportedError('Messaging'));\n    }\n    return ret;\n  }\n};\nconst PROVIDED_MESSAGING_INSTANCES = new InjectionToken('angularfire2.messaging-instances');\nfunction defaultMessagingInstanceFactory(provided, defaultApp) {\n  if (!isMessagingSupportedFactory.sync()) {\n    return null;\n  }\n  const defaultMessaging = _getDefaultInstanceOf(MESSAGING_PROVIDER_NAME, provided, defaultApp);\n  return defaultMessaging && new Messaging(defaultMessaging);\n}\nfunction messagingInstanceFactory(fn) {\n  return (zone, injector) => {\n    if (!isMessagingSupportedFactory.sync()) {\n      return null;\n    }\n    const messaging = zone.runOutsideAngular(() => fn(injector));\n    return new Messaging(messaging);\n  };\n}\nconst MESSAGING_INSTANCES_PROVIDER = {\n  provide: MessagingInstances,\n  deps: [[new Optional(), PROVIDED_MESSAGING_INSTANCES]]\n};\nconst DEFAULT_MESSAGING_INSTANCE_PROVIDER = {\n  provide: Messaging,\n  useFactory: defaultMessagingInstanceFactory,\n  deps: [[new Optional(), PROVIDED_MESSAGING_INSTANCES], FirebaseApp]\n};\nclass MessagingModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'fcm');\n  }\n  static ɵfac = function MessagingModule_Factory(t) {\n    return new (t || MessagingModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MessagingModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DEFAULT_MESSAGING_INSTANCE_PROVIDER, MESSAGING_INSTANCES_PROVIDER, {\n      provide: APP_INITIALIZER,\n      useValue: isMessagingSupportedFactory.async,\n      multi: true\n    }]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MessagingModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_MESSAGING_INSTANCE_PROVIDER, MESSAGING_INSTANCES_PROVIDER, {\n        provide: APP_INITIALIZER,\n        useValue: isMessagingSupportedFactory.async,\n        multi: true\n      }]\n    }]\n  }], () => [], null);\n})();\nfunction provideMessaging(fn, ...deps) {\n  registerVersion('angularfire', VERSION.full, 'fcm');\n  return makeEnvironmentProviders([DEFAULT_MESSAGING_INSTANCE_PROVIDER, MESSAGING_INSTANCES_PROVIDER, {\n    provide: APP_INITIALIZER,\n    useValue: isMessagingSupportedFactory.async,\n    multi: true\n  }, {\n    provide: PROVIDED_MESSAGING_INSTANCES,\n    useFactory: messagingInstanceFactory(fn),\n    multi: true,\n    deps: [NgZone, Injector, _AngularFireSchedulers, FirebaseApps, ...deps]\n  }]);\n}\nconst isSupported = isMessagingSupportedFactory.async;\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst deleteToken = _zoneWrap(deleteToken$1, true);\nconst getMessaging = _zoneWrap(getMessaging$1, true);\nconst getToken = _zoneWrap(getToken$1, true);\nconst onMessage = _zoneWrap(onMessage$1, false);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Messaging, MessagingInstances, MessagingModule, deleteToken, getMessaging, getToken, isSupported, messagingInstance$, onMessage, provideMessaging };\n", "import { _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\nconst name = \"@firebase/installations\";\nconst version = \"0.6.8\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst PENDING_TIMEOUT_MS = 10000;\nconst PACKAGE_VERSION = `w:${version}`;\nconst INTERNAL_AUTH_VERSION = 'FIS_v2';\nconst INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\nconst TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\nconst SERVICE = 'installations';\nconst SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst ERROR_DESCRIPTION_MAP = {\n  [\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\n  [\"not-registered\" /* ErrorCode.NOT_REGISTERED */]: 'Firebase Installation is not registered.',\n  [\"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */]: 'Firebase Installation not found.',\n  [\"request-failed\" /* ErrorCode.REQUEST_FAILED */]: '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [\"app-offline\" /* ErrorCode.APP_OFFLINE */]: 'Could not process request. Application offline.',\n  [\"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */]: \"Can't delete installation while there is a pending registration request.\"\n};\nconst ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nfunction isServerError(error) {\n  return error instanceof FirebaseError && error.code.includes(\"request-failed\" /* ErrorCode.REQUEST_FAILED */);\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction getInstallationsEndpoint({\n  projectId\n}) {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\nfunction extractAuthTokenInfoFromResponse(response) {\n  return {\n    token: response.token,\n    requestStatus: 2 /* RequestStatus.COMPLETED */,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\nasync function getErrorFromResponse(requestName, response) {\n  const responseJson = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(\"request-failed\" /* ErrorCode.REQUEST_FAILED */, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\nfunction getHeaders({\n  apiKey\n}) {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\nfunction getHeadersWithAuth(appConfig, {\n  refreshToken\n}) {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\nasync function retryIfServerError(fn) {\n  const result = await fn();\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n  return result;\n}\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\nfunction getAuthorizationHeader(refreshToken) {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nasync function createInstallationRequest({\n  appConfig,\n  heartbeatServiceProvider\n}, {\n  fid\n}) {\n  const endpoint = getInstallationsEndpoint(appConfig);\n  const headers = getHeaders(appConfig);\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n  const request = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue = await response.json();\n    const registeredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: 2 /* RequestStatus.COMPLETED */,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/** Returns a promise that resolves after given time passes. */\nfunction sleep(ms) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction bufferToBase64UrlSafe(array) {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nconst INVALID_FID = '';\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\nfunction generateFid() {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto = self.crypto || self.msCrypto;\n    crypto.getRandomValues(fidByteArray);\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + fidByteArray[0] % 0b00010000;\n    const fid = encode(fidByteArray);\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch (_a) {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray) {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/** Returns a string key that can be used to identify the app. */\nfunction getKey(appConfig) {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst fidChangeCallbacks = new Map();\n/**\r\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\r\n * change to other tabs.\r\n */\nfunction fidChanged(appConfig, fid) {\n  const key = getKey(appConfig);\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\nfunction addCallback(appConfig, callback) {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n  const key = getKey(appConfig);\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\nfunction removeCallback(appConfig, callback) {\n  const key = getKey(appConfig);\n  const callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    return;\n  }\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\nfunction callFidChangeCallbacks(key, fid) {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\nfunction broadcastFidChange(key, fid) {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({\n      key,\n      fid\n    });\n  }\n  closeBroadcastChannel();\n}\nlet broadcastChannel = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel() {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\nfunction closeBroadcastChannel() {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\nlet dbPromise = null;\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n/** Assigns or overwrites the record for the given key with the given value. */\nasync function set(appConfig, value) {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = await objectStore.get(key);\n  await objectStore.put(value, key);\n  await tx.done;\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n  return value;\n}\n/** Removes record(s) from the objectStore that match the given key. */\nasync function remove(appConfig) {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\nasync function update(appConfig, updateFn) {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = await store.get(key);\n  const newValue = updateFn(oldValue);\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.done;\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n  return newValue;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\nasync function getInstallationEntry(installations) {\n  let registrationPromise;\n  const installationEntry = await update(installations.appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(installations, installationEntry);\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return {\n      installationEntry: await registrationPromise\n    };\n  }\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\nfunction updateOrCreateInstallationEntry(oldEntry) {\n  const entry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n  };\n  return clearTimedOutRequest(entry);\n}\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\nfunction triggerRegistrationIfNecessary(installations, installationEntry) {\n  if (installationEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */));\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: 1 /* RequestStatus.IN_PROGRESS */,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(installations, inProgressEntry);\n    return {\n      installationEntry: inProgressEntry,\n      registrationPromise\n    };\n  } else if (installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(installations)\n    };\n  } else {\n    return {\n      installationEntry\n    };\n  }\n}\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(installations, installationEntry) {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(installations, installationEntry);\n    return set(installations.appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(installations.appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n      });\n    }\n    throw e;\n  }\n}\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(installations) {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n  let entry = await updateInstallationRequest(installations.appConfig);\n  while (entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n    // createInstallation request still in progress.\n    await sleep(100);\n    entry = await updateInstallationRequest(installations.appConfig);\n  }\n  if (entry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n    // The request timed out or failed in a different call. Try again.\n    const {\n      installationEntry,\n      registrationPromise\n    } = await getInstallationEntry(installations);\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry;\n    }\n  }\n  return entry;\n}\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\nfunction updateInstallationRequest(appConfig) {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(\"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\nfunction clearTimedOutRequest(entry) {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n    };\n  }\n  return entry;\n}\nfunction hasInstallationRequestTimedOut(installationEntry) {\n  return installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */ && installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now();\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nasync function generateAuthTokenRequest({\n  appConfig,\n  heartbeatServiceProvider\n}, installationEntry) {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION,\n      appId: appConfig.appId\n    }\n  };\n  const request = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue = await response.json();\n    const completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\nfunction getGenerateAuthTokenEndpoint(appConfig, {\n  fid\n}) {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\nasync function refreshAuthToken(installations, forceRefresh = false) {\n  let tokenPromise;\n  const entry = await update(installations.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\n    }\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\n      }\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n  const authToken = tokenPromise ? await tokenPromise : entry.authToken;\n  return authToken;\n}\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n *\r\n * Waits until the current pending request finishes. If the request times out,\r\n * tries once in this thread as well.\r\n */\nasync function waitUntilAuthTokenRequest(installations, forceRefresh) {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n  let entry = await updateAuthTokenRequest(installations.appConfig);\n  while (entry.authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n    entry = await updateAuthTokenRequest(installations.appConfig);\n  }\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === 0 /* RequestStatus.NOT_STARTED */) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(installations, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\nfunction updateAuthTokenRequest(appConfig) {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\n    }\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return Object.assign(Object.assign({}, oldEntry), {\n        authToken: {\n          requestStatus: 0 /* RequestStatus.NOT_STARTED */\n        }\n      });\n    }\n    return oldEntry;\n  });\n}\nasync function fetchAuthTokenFromServer(installations, installationEntry) {\n  try {\n    const authToken = await generateAuthTokenRequest(installations, installationEntry);\n    const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), {\n      authToken\n    });\n    await set(installations.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (isServerError(e) && (e.customData.serverCode === 401 || e.customData.serverCode === 404)) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), {\n        authToken: {\n          requestStatus: 0 /* RequestStatus.NOT_STARTED */\n        }\n      });\n      await set(installations.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\nfunction isEntryRegistered(installationEntry) {\n  return installationEntry !== undefined && installationEntry.registrationStatus === 2 /* RequestStatus.COMPLETED */;\n}\nfunction isAuthTokenValid(authToken) {\n  return authToken.requestStatus === 2 /* RequestStatus.COMPLETED */ && !isAuthTokenExpired(authToken);\n}\nfunction isAuthTokenExpired(authToken) {\n  const now = Date.now();\n  return now < authToken.creationTime || authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER;\n}\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\n  const inProgressAuthToken = {\n    requestStatus: 1 /* RequestStatus.IN_PROGRESS */,\n    requestTime: Date.now()\n  };\n  return Object.assign(Object.assign({}, oldEntry), {\n    authToken: inProgressAuthToken\n  });\n}\nfunction hasAuthTokenRequestTimedOut(authToken) {\n  return authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */ && authToken.requestTime + PENDING_TIMEOUT_MS < Date.now();\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Creates a Firebase Installation if there isn't one for the app and\r\n * returns the Installation ID.\r\n * @param installations - The `Installations` instance.\r\n *\r\n * @public\r\n */\nasync function getId(installations) {\n  const installationsImpl = installations;\n  const {\n    installationEntry,\n    registrationPromise\n  } = await getInstallationEntry(installationsImpl);\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(installationsImpl).catch(console.error);\n  }\n  return installationEntry.fid;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns a Firebase Installations auth token, identifying the current\r\n * Firebase Installation.\r\n * @param installations - The `Installations` instance.\r\n * @param forceRefresh - Force refresh regardless of token expiration.\r\n *\r\n * @public\r\n */\nasync function getToken(installations, forceRefresh = false) {\n  const installationsImpl = installations;\n  await completeInstallationRegistration(installationsImpl);\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n  return authToken.token;\n}\nasync function completeInstallationRegistration(installations) {\n  const {\n    registrationPromise\n  } = await getInstallationEntry(installations);\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nasync function deleteInstallationRequest(appConfig, installationEntry) {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request = {\n    method: 'DELETE',\n    headers\n  };\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\nfunction getDeleteEndpoint(appConfig, {\n  fid\n}) {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Deletes the Firebase Installation and all associated data.\r\n * @param installations - The `Installations` instance.\r\n *\r\n * @public\r\n */\nasync function deleteInstallations(installations) {\n  const {\n    appConfig\n  } = installations;\n  const entry = await update(appConfig, oldEntry => {\n    if (oldEntry && oldEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n      // Delete the unregistered entry without sending a deleteInstallation request.\n      return undefined;\n    }\n    return oldEntry;\n  });\n  if (entry) {\n    if (entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n      // Can't delete while trying to register.\n      throw ERROR_FACTORY.create(\"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */);\n    } else if (entry.registrationStatus === 2 /* RequestStatus.COMPLETED */) {\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\n      } else {\n        await deleteInstallationRequest(appConfig, entry);\n        await remove(appConfig);\n      }\n    }\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Sets a new callback that will get called when Installation ID changes.\r\n * Returns an unsubscribe function that will remove the callback when called.\r\n * @param installations - The `Installations` instance.\r\n * @param callback - The callback function that is invoked when FID changes.\r\n * @returns A function that can be called to unsubscribe.\r\n *\r\n * @public\r\n */\nfunction onIdChange(installations, callback) {\n  const {\n    appConfig\n  } = installations;\n  addCallback(appConfig, callback);\n  return () => {\n    removeCallback(appConfig, callback);\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns an instance of {@link Installations} associated with the given\r\n * {@link @firebase/app#FirebaseApp} instance.\r\n * @param app - The {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * @public\r\n */\nfunction getInstallations(app = getApp()) {\n  const installationsImpl = _getProvider(app, 'installations').getImmediate();\n  return installationsImpl;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction extractAppConfig(app) {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n  // Required app config keys\n  const configKeys = ['projectId', 'apiKey', 'appId'];\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n  return {\n    appName: app.name,\n    projectId: app.options.projectId,\n    apiKey: app.options.apiKey,\n    appId: app.options.appId\n  };\n}\nfunction getMissingValueError(valueName) {\n  return ERROR_FACTORY.create(\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, {\n    valueName\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst INSTALLATIONS_NAME = 'installations';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\nconst publicFactory = container => {\n  const app = container.getProvider('app').getImmediate();\n  // Throws if app isn't configured properly.\n  const appConfig = extractAppConfig(app);\n  const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n  const installationsImpl = {\n    app,\n    appConfig,\n    heartbeatServiceProvider,\n    _delete: () => Promise.resolve()\n  };\n  return installationsImpl;\n};\nconst internalFactory = container => {\n  const app = container.getProvider('app').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n  const installationsInternal = {\n    getId: () => getId(installations),\n    getToken: forceRefresh => getToken(installations, forceRefresh)\n  };\n  return installationsInternal;\n};\nfunction registerInstallations() {\n  _registerComponent(new Component(INSTALLATIONS_NAME, publicFactory, \"PUBLIC\" /* ComponentType.PUBLIC */));\n  _registerComponent(new Component(INSTALLATIONS_NAME_INTERNAL, internalFactory, \"PRIVATE\" /* ComponentType.PRIVATE */));\n}\n\n/**\r\n * The Firebase Installations Web SDK.\r\n * This SDK does not work in a Node.js environment.\r\n *\r\n * @packageDocumentation\r\n */\nregisterInstallations();\nregisterVersion(name, version);\n// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\nregisterVersion(name, version, 'esm2017');\nexport { deleteInstallations, getId, getInstallations, getToken, onIdChange };\n", "import '@firebase/installations';\nimport { Component } from '@firebase/component';\nimport { openDB, deleteDB } from 'idb';\nimport { ErrorFactory, validateIndexedDBOpenable, isIndexedDBAvailable, areCookiesEnabled, getModularInstance } from '@firebase/util';\nimport { _registerComponent, registerVersion, _getProvider, getApp } from '@firebase/app';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nconst DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\nconst DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\nconst ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\nconst CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nconst CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nconst CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nconst CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nvar MessageType$1;\n(function (MessageType) {\n  MessageType[MessageType[\"DATA_MESSAGE\"] = 1] = \"DATA_MESSAGE\";\n  MessageType[MessageType[\"DISPLAY_NOTIFICATION\"] = 3] = \"DISPLAY_NOTIFICATION\";\n})(MessageType$1 || (MessageType$1 = {}));\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\r\n * in compliance with the License. You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n * or implied. See the License for the specific language governing permissions and limitations under\r\n * the License.\r\n */\nvar MessageType;\n(function (MessageType) {\n  MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\n  MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\n})(MessageType || (MessageType = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction arrayToBase64(array) {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction base64ToArray(base64String) {\n  const padding = '='.repeat((4 - base64String.length % 4) % 4);\n  const base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\r\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\r\n * callback is called for all versions of the old DB.\r\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\nasync function migrateOldDatabase(senderId) {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await indexedDB.databases();\n    const dbNames = databases.map(db => db.name);\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n  let tokenDetails = null;\n  const db = await openDB(OLD_DB_NAME, OLD_DB_VERSION, {\n    upgrade: async (db, oldVersion, newVersion, upgradeTransaction) => {\n      var _a;\n      if (oldVersion < 2) {\n        // Database too old, skip migration.\n        return;\n      }\n      if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n        // Database did not exist. Nothing to do.\n        return;\n      }\n      const objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n      const value = await objectStore.index('fcmSenderId').get(senderId);\n      await objectStore.clear();\n      if (!value) {\n        // No entry in the database, nothing to migrate.\n        return;\n      }\n      if (oldVersion === 2) {\n        const oldDetails = value;\n        if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n          return;\n        }\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\n          subscriptionOptions: {\n            auth: oldDetails.auth,\n            p256dh: oldDetails.p256dh,\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: typeof oldDetails.vapidKey === 'string' ? oldDetails.vapidKey : arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 3) {\n        const oldDetails = value;\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 4) {\n        const oldDetails = value;\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      }\n    }\n  });\n  db.close();\n  // Delete all old databases.\n  await deleteDB(OLD_DB_NAME);\n  await deleteDB('fcm_vapid_details_db');\n  await deleteDB('undefined');\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\nfunction checkTokenDetails(tokenDetails) {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const {\n    subscriptionOptions\n  } = tokenDetails;\n  return typeof tokenDetails.createTime === 'number' && tokenDetails.createTime > 0 && typeof tokenDetails.token === 'string' && tokenDetails.token.length > 0 && typeof subscriptionOptions.auth === 'string' && subscriptionOptions.auth.length > 0 && typeof subscriptionOptions.p256dh === 'string' && subscriptionOptions.p256dh.length > 0 && typeof subscriptionOptions.endpoint === 'string' && subscriptionOptions.endpoint.length > 0 && typeof subscriptionOptions.swScope === 'string' && subscriptionOptions.swScope.length > 0 && typeof subscriptionOptions.vapidKey === 'string' && subscriptionOptions.vapidKey.length > 0;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Exported for tests.\nconst DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\nlet dbPromise = null;\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (upgradeDb, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n        // because if there are multiple versions between the old version and the current version, we\n        // want ALL the migrations that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n/** Gets record(s) from the objectStore that match the given key. */\nasync function dbGet(firebaseDependencies) {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = await db.transaction(OBJECT_STORE_NAME).objectStore(OBJECT_STORE_NAME).get(key);\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(firebaseDependencies.appConfig.senderId);\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n/** Assigns or overwrites the record for the given key with the given value. */\nasync function dbSet(firebaseDependencies, tokenDetails) {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.done;\n  return tokenDetails;\n}\n/** Removes record(s) from the objectStore that match the given key. */\nasync function dbRemove(firebaseDependencies) {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\nfunction getKey({\n  appConfig\n}) {\n  return appConfig.appId;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst ERROR_MAP = {\n  [\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\n  [\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */]: 'This method is available in a Window context.',\n  [\"only-available-in-sw\" /* ErrorCode.AVAILABLE_IN_SW */]: 'This method is available in a service worker context.',\n  [\"permission-default\" /* ErrorCode.PERMISSION_DEFAULT */]: 'The notification permission was not granted and dismissed instead.',\n  [\"permission-blocked\" /* ErrorCode.PERMISSION_BLOCKED */]: 'The notification permission was not granted and blocked instead.',\n  [\"unsupported-browser\" /* ErrorCode.UNSUPPORTED_BROWSER */]: \"This browser doesn't support the API's required to use the Firebase SDK.\",\n  [\"indexed-db-unsupported\" /* ErrorCode.INDEXED_DB_UNSUPPORTED */]: \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n  [\"failed-service-worker-registration\" /* ErrorCode.FAILED_DEFAULT_REGISTRATION */]: 'We are unable to register the default service worker. {$browserErrorMessage}',\n  [\"token-subscribe-failed\" /* ErrorCode.TOKEN_SUBSCRIBE_FAILED */]: 'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [\"token-subscribe-no-token\" /* ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN */]: 'FCM returned no token when subscribing the user to push.',\n  [\"token-unsubscribe-failed\" /* ErrorCode.TOKEN_UNSUBSCRIBE_FAILED */]: 'A problem occurred while unsubscribing the ' + 'user from FCM: {$errorInfo}',\n  [\"token-update-failed\" /* ErrorCode.TOKEN_UPDATE_FAILED */]: 'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [\"token-update-no-token\" /* ErrorCode.TOKEN_UPDATE_NO_TOKEN */]: 'FCM returned no token when updating the user to push.',\n  [\"use-sw-after-get-token\" /* ErrorCode.USE_SW_AFTER_GET_TOKEN */]: 'The useServiceWorker() method may only be called once and must be ' + 'called before calling getToken() to ensure your service worker is used.',\n  [\"invalid-sw-registration\" /* ErrorCode.INVALID_SW_REGISTRATION */]: 'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [\"invalid-bg-handler\" /* ErrorCode.INVALID_BG_HANDLER */]: 'The input to setBackgroundMessageHandler() must be a function.',\n  [\"invalid-vapid-key\" /* ErrorCode.INVALID_VAPID_KEY */]: 'The public VAPID key must be a string.',\n  [\"use-vapid-key-after-get-token\" /* ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN */]: 'The usePublicVapidKey() method may only be called once and must be ' + 'called before calling getToken() to ensure your VAPID key is used.'\n};\nconst ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nasync function requestGetToken(firebaseDependencies, subscriptionOptions) {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n  let responseData;\n  try {\n    const response = await fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions);\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* ErrorCode.TOKEN_SUBSCRIBE_FAILED */, {\n      errorInfo: err === null || err === void 0 ? void 0 : err.toString()\n    });\n  }\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* ErrorCode.TOKEN_SUBSCRIBE_FAILED */, {\n      errorInfo: message\n    });\n  }\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(\"token-subscribe-no-token\" /* ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN */);\n  }\n  return responseData.token;\n}\nasync function requestUpdateToken(firebaseDependencies, tokenDetails) {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions);\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n  let responseData;\n  try {\n    const response = await fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`, updateOptions);\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(\"token-update-failed\" /* ErrorCode.TOKEN_UPDATE_FAILED */, {\n      errorInfo: err === null || err === void 0 ? void 0 : err.toString()\n    });\n  }\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(\"token-update-failed\" /* ErrorCode.TOKEN_UPDATE_FAILED */, {\n      errorInfo: message\n    });\n  }\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(\"token-update-no-token\" /* ErrorCode.TOKEN_UPDATE_NO_TOKEN */);\n  }\n  return responseData.token;\n}\nasync function requestDeleteToken(firebaseDependencies, token) {\n  const headers = await getHeaders(firebaseDependencies);\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n  try {\n    const response = await fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${token}`, unsubscribeOptions);\n    const responseData = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* ErrorCode.TOKEN_UNSUBSCRIBE_FAILED */, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* ErrorCode.TOKEN_UNSUBSCRIBE_FAILED */, {\n      errorInfo: err === null || err === void 0 ? void 0 : err.toString()\n    });\n  }\n}\nfunction getEndpoint({\n  projectId\n}) {\n  return `${ENDPOINT}/projects/${projectId}/registrations`;\n}\nasync function getHeaders({\n  appConfig,\n  installations\n}) {\n  const authToken = await installations.getToken();\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}) {\n  const body = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n  return body;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\nasync function getTokenInternal(messaging) {\n  const pushSubscription = await getPushSubscription(messaging.swRegistration, messaging.vapidKey);\n  const subscriptionOptions = {\n    vapidKey: messaging.vapidKey,\n    swScope: messaging.swRegistration.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\n  };\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n  } else if (!isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n    return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(messaging, {\n      token: tokenDetails.token,\n      createTime: Date.now(),\n      subscriptionOptions\n    });\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n/**\r\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\r\n * the push subscription if it exists.\r\n */\nasync function deleteTokenInternal(messaging) {\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n    await dbRemove(messaging.firebaseDependencies);\n  }\n  // Unsubscribe from the push subscription.\n  const pushSubscription = await messaging.swRegistration.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n  // If there's no SW, consider it a success.\n  return true;\n}\nasync function updateToken(messaging, tokenDetails) {\n  try {\n    const updatedToken = await requestUpdateToken(messaging.firebaseDependencies, tokenDetails);\n    const updatedTokenDetails = Object.assign(Object.assign({}, tokenDetails), {\n      token: updatedToken,\n      createTime: Date.now()\n    });\n    await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    throw e;\n  }\n}\nasync function getNewToken(firebaseDependencies, subscriptionOptions) {\n  const token = await requestGetToken(firebaseDependencies, subscriptionOptions);\n  const tokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n/**\r\n * Gets a PushSubscription for the current user.\r\n */\nasync function getPushSubscription(swRegistration, vapidKey) {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n/**\r\n * Checks if the saved tokenDetails object matches the configuration provided.\r\n */\nfunction isTokenValid(dbOptions, currentOptions) {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction externalizePayload(internalPayload) {\n  const payload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcmMessageId\n  };\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n  return payload;\n}\nfunction propagateNotificationPayload(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n  payload.notification = {};\n  const title = messagePayloadInternal.notification.title;\n  if (!!title) {\n    payload.notification.title = title;\n  }\n  const body = messagePayloadInternal.notification.body;\n  if (!!body) {\n    payload.notification.body = body;\n  }\n  const image = messagePayloadInternal.notification.image;\n  if (!!image) {\n    payload.notification.image = image;\n  }\n  const icon = messagePayloadInternal.notification.icon;\n  if (!!icon) {\n    payload.notification.icon = icon;\n  }\n}\nfunction propagateDataPayload(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n  payload.data = messagePayloadInternal.data;\n}\nfunction propagateFcmOptions(payload, messagePayloadInternal) {\n  var _a, _b, _c, _d, _e;\n  // fcmOptions.link value is written into notification.click_action. see more in b/232072111\n  if (!messagePayloadInternal.fcmOptions && !((_a = messagePayloadInternal.notification) === null || _a === void 0 ? void 0 : _a.click_action)) {\n    return;\n  }\n  payload.fcmOptions = {};\n  const link = (_c = (_b = messagePayloadInternal.fcmOptions) === null || _b === void 0 ? void 0 : _b.link) !== null && _c !== void 0 ? _c : (_d = messagePayloadInternal.notification) === null || _d === void 0 ? void 0 : _d.click_action;\n  if (!!link) {\n    payload.fcmOptions.link = link;\n  }\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = (_e = messagePayloadInternal.fcmOptions) === null || _e === void 0 ? void 0 : _e.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions.analyticsLabel = analyticsLabel;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction isConsoleMessage(data) {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n_mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\n_mergeStrings('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');\nfunction _mergeStrings(s1, s2) {\n  const resultArray = [];\n  for (let i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n  return resultArray.join('');\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction extractAppConfig(app) {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n  // Required app config keys\n  const configKeys = ['projectId', 'apiKey', 'appId', 'messagingSenderId'];\n  const {\n    options\n  } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n  return {\n    appName: app.name,\n    projectId: options.projectId,\n    apiKey: options.apiKey,\n    appId: options.appId,\n    senderId: options.messagingSenderId\n  };\n}\nfunction getMissingValueError(valueName) {\n  return ERROR_FACTORY.create(\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, {\n    valueName\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nclass MessagingService {\n  constructor(app, installations, analyticsProvider) {\n    // logging is only done with end user consent. Default to false.\n    this.deliveryMetricsExportedToBigQueryEnabled = false;\n    this.onBackgroundMessageHandler = null;\n    this.onMessageHandler = null;\n    this.logEvents = [];\n    this.isLogServiceStarted = false;\n    const appConfig = extractAppConfig(app);\n    this.firebaseDependencies = {\n      app,\n      appConfig,\n      installations,\n      analyticsProvider\n    };\n  }\n  _delete() {\n    return Promise.resolve();\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nasync function registerDefaultSw(messaging) {\n  try {\n    messaging.swRegistration = await navigator.serviceWorker.register(DEFAULT_SW_PATH, {\n      scope: DEFAULT_SW_SCOPE\n    });\n    // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n    // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n    // is stuck with the old version. For example,\n    // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n    // sw if there was an update.\n    messaging.swRegistration.update().catch(() => {\n      /* it is non blocking and we don't care if it failed */\n    });\n  } catch (e) {\n    throw ERROR_FACTORY.create(\"failed-service-worker-registration\" /* ErrorCode.FAILED_DEFAULT_REGISTRATION */, {\n      browserErrorMessage: e === null || e === void 0 ? void 0 : e.message\n    });\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nasync function updateSwReg(messaging, swRegistration) {\n  if (!swRegistration && !messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n  if (!swRegistration && !!messaging.swRegistration) {\n    return;\n  }\n  if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n    throw ERROR_FACTORY.create(\"invalid-sw-registration\" /* ErrorCode.INVALID_SW_REGISTRATION */);\n  }\n  messaging.swRegistration = swRegistration;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nasync function updateVapidKey(messaging, vapidKey) {\n  if (!!vapidKey) {\n    messaging.vapidKey = vapidKey;\n  } else if (!messaging.vapidKey) {\n    messaging.vapidKey = DEFAULT_VAPID_KEY;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nasync function getToken$1(messaging, options) {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */);\n  }\n  if (Notification.permission === 'default') {\n    await Notification.requestPermission();\n  }\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(\"permission-blocked\" /* ErrorCode.PERMISSION_BLOCKED */);\n  }\n  await updateVapidKey(messaging, options === null || options === void 0 ? void 0 : options.vapidKey);\n  await updateSwReg(messaging, options === null || options === void 0 ? void 0 : options.serviceWorkerRegistration);\n  return getTokenInternal(messaging);\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nasync function logToScion(messaging, messageType, data) {\n  const eventType = getEventType(messageType);\n  const analytics = await messaging.firebaseDependencies.analyticsProvider.get();\n  analytics.logEvent(eventType, {\n    /* eslint-disable camelcase */\n    message_id: data[CONSOLE_CAMPAIGN_ID],\n    message_name: data[CONSOLE_CAMPAIGN_NAME],\n    message_time: data[CONSOLE_CAMPAIGN_TIME],\n    message_device_time: Math.floor(Date.now() / 1000)\n    /* eslint-enable camelcase */\n  });\n}\nfunction getEventType(messageType) {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nasync function messageEventListener(messaging, event) {\n  const internalPayload = event.data;\n  if (!internalPayload.isFirebaseMessaging) {\n    return;\n  }\n  if (messaging.onMessageHandler && internalPayload.messageType === MessageType.PUSH_RECEIVED) {\n    if (typeof messaging.onMessageHandler === 'function') {\n      messaging.onMessageHandler(externalizePayload(internalPayload));\n    } else {\n      messaging.onMessageHandler.next(externalizePayload(internalPayload));\n    }\n  }\n  // Log to Scion if applicable\n  const dataPayload = internalPayload.data;\n  if (isConsoleMessage(dataPayload) && dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1') {\n    await logToScion(messaging, internalPayload.messageType, dataPayload);\n  }\n}\nconst name = \"@firebase/messaging\";\nconst version = \"0.12.10\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst WindowMessagingFactory = container => {\n  const messaging = new MessagingService(container.getProvider('app').getImmediate(), container.getProvider('installations-internal').getImmediate(), container.getProvider('analytics-internal'));\n  navigator.serviceWorker.addEventListener('message', e => messageEventListener(messaging, e));\n  return messaging;\n};\nconst WindowMessagingInternalFactory = container => {\n  const messaging = container.getProvider('messaging').getImmediate();\n  const messagingInternal = {\n    getToken: options => getToken$1(messaging, options)\n  };\n  return messagingInternal;\n};\nfunction registerMessagingInWindow() {\n  _registerComponent(new Component('messaging', WindowMessagingFactory, \"PUBLIC\" /* ComponentType.PUBLIC */));\n  _registerComponent(new Component('messaging-internal', WindowMessagingInternalFactory, \"PRIVATE\" /* ComponentType.PRIVATE */));\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, 'esm2017');\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Checks if all required APIs exist in the browser.\r\n * @returns a Promise that resolves to a boolean.\r\n *\r\n * @public\r\n */\nasync function isWindowSupported() {\n  try {\n    // This throws if open() is unsupported, so adding it to the conditional\n    // statement below can cause an uncaught error.\n    await validateIndexedDBOpenable();\n  } catch (e) {\n    return false;\n  }\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return typeof window !== 'undefined' && isIndexedDBAvailable() && areCookiesEnabled() && 'serviceWorker' in navigator && 'PushManager' in window && 'Notification' in window && 'fetch' in window && ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') && PushSubscription.prototype.hasOwnProperty('getKey');\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nasync function deleteToken$1(messaging) {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */);\n  }\n  if (!messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n  return deleteTokenInternal(messaging);\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction onMessage$1(messaging, nextOrObserver) {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */);\n  }\n  messaging.onMessageHandler = nextOrObserver;\n  return () => {\n    messaging.onMessageHandler = null;\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Retrieves a Firebase Cloud Messaging instance.\r\n *\r\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\r\n *\r\n * @public\r\n */\nfunction getMessagingInWindow(app = getApp()) {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported().then(isSupported => {\n    // If `isWindowSupported()` resolved, but returned false.\n    if (!isSupported) {\n      throw ERROR_FACTORY.create(\"unsupported-browser\" /* ErrorCode.UNSUPPORTED_BROWSER */);\n    }\n  }, _ => {\n    // If `isWindowSupported()` rejected.\n    throw ERROR_FACTORY.create(\"indexed-db-unsupported\" /* ErrorCode.INDEXED_DB_UNSUPPORTED */);\n  });\n  return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n/**\r\n * Subscribes the {@link Messaging} instance to push notifications. Returns a Firebase Cloud\r\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\r\n * instance.\r\n *\r\n * If notification permission isn't already granted, this method asks the user for permission. The\r\n * returned promise rejects if the user does not allow the app to show notifications.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param options - Provides an optional vapid key and an optional service worker registration.\r\n *\r\n * @returns The promise resolves with an FCM registration token.\r\n *\r\n * @public\r\n */\nasync function getToken(messaging, options) {\n  messaging = getModularInstance(messaging);\n  return getToken$1(messaging, options);\n}\n/**\r\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\r\n * the {@link Messaging} instance from the push subscription.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n *\r\n * @returns The promise resolves when the token has been successfully deleted.\r\n *\r\n * @public\r\n */\nfunction deleteToken(messaging) {\n  messaging = getModularInstance(messaging);\n  return deleteToken$1(messaging);\n}\n/**\r\n * When a push message is received and the user is currently on a page for your origin, the\r\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\r\n * the push message.\r\n *\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param nextOrObserver - This function, or observer object with `next` defined,\r\n *     is called when a message is received and the user is currently viewing your page.\r\n * @returns To stop listening for messages execute this returned function.\r\n *\r\n * @public\r\n */\nfunction onMessage(messaging, nextOrObserver) {\n  messaging = getModularInstance(messaging);\n  return onMessage$1(messaging, nextOrObserver);\n}\n\n/**\r\n * The Firebase Cloud Messaging Web SDK.\r\n * This SDK does not work in a Node.js environment.\r\n *\r\n * @packageDocumentation\r\n */\nregisterMessagingInWindow();\nexport { deleteToken, getMessagingInWindow as getMessaging, getToken, isWindowSupported as isSupported, onMessage };\n"],
  "mappings": "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",
  "names": ["installationEntry", "MessageType", "db", "DATABASE_NAME", "DATABASE_VERSION", "OBJECT_STORE_NAME", "dbPromise", "getDbPromise", "getKey", "ERROR_FACTORY", "getHeaders", "extractAppConfig", "getMissingValueError", "name", "version", "isSupported", "getToken", "deleteToken", "getToken", "onMessage"]
}
